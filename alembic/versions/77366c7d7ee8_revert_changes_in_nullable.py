"""revert changes in nullable

Revision ID: 77366c7d7ee8
Revises: 651c9bb6859c
Create Date: 2025-05-12 19:20:15.556043

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '77366c7d7ee8'
down_revision: Union[str, None] = '651c9bb6859c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First convert to string temporarily to avoid enum constraints
    op.alter_column('pets', 'purpose',
                    existing_type=mysql.ENUM('ADOPTION', 'LOST_PET'),
                    type_=sa.String(50),
                    existing_nullable=True)
    
    # Then convert back to ENUM with new value
    op.alter_column('pets', 'purpose',
                    existing_type=sa.String(50),
                    type_=mysql.ENUM('ADOPTION', 'LOST_PET', 'VACCINATION'),
                    nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First convert to string to remove VACCINATION values
    op.alter_column('pets', 'purpose',
                    existing_type=mysql.ENUM('ADOPTION', 'LOST_PET', 'VACCINATION'),
                    type_=sa.String(50),
                    existing_nullable=True)
    
    # Then convert back to original ENUM
    op.alter_column('pets', 'purpose',
                    existing_type=sa.String(50),
                    type_=mysql.ENUM('ADOPTION', 'LOST_PET'),
                    nullable=False)
    # ### end Alembic commands ###
